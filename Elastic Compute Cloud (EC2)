
EC2 -Elastic Compute Cloud - Infrastructure as a Service - IaaS
EC2 includes:
	Renting virtual machines (EC2)
	Storing data on virtual drives (EBS)
	Distributing load accross machines (ELB)
	Scaling the services using an auto-scaling groups (ASG)
We can use Linux, Windows or Mac OS in EC2
EC2 instances based on resources sizes for our requirements. We can choose them based on CPU, RAM, storage, and speed of the network card
We can set up firewall rules and we call it "Security Groups"
We can configure our EC2 instance using EC2 User data script. (bootstrapping). 
That script is only run once at the instance first start for example installing updates, installing software etc...

EC2 Instances Purchasing Options:
On-demand Instances - short workload, predictible pricing, pay by second.
	Highest cost but no upfront payment
	No long-term commitment
	Recommended for short-term and uninterrupted workloads, where you cannot predict how the application will behave	
Reserved (1 & 3 years) - reserved or convertible reserved instance options for long workloads
	Up to %70 discount compared to On-demand
	Reservation period 1 year or 3 years
	Payment options - No upfront, partial upfront, all upfront (to pay less)
	Scope - Ragional or Zonal
	Recommended for steady-state usage applications (like database)
	You can buy and sell in the Reserved Instance Marketplace
	Convertible Reserved Instance - can change EC2 instance type, instance family, OS, scope, tenancy (a little bit more expensive than reserved instances)
Saving Plans (1 & 3 years) - commitment to an amount of usage, long workload
	Up to %70 discount compared to On-demand
	Commit to a certain type of usage
	Usage beyond EC2 Savings Plans is billed at the On-Demand price
Spot Instances - short workloads, cheap, can lose instances (less reliable)
	Up to %90 discount compared to On-demand
	The most cost-efficient instances in AWS
	Useful for workloads that are resilient to failure such as batch jobs, data analysis, image processing, workloads with a flexible start and end time etc.
	Not suitable for critical jobs or databases
Dedicated Hosts - book an entire physical server, control instance placement
	A physical server with instance capacity fully dedicated to your use
	Pay per second for active dedicated host
	Reserved 1 or 3 years
	The most expansive option
	Useful for software that have complicated licencing model (BYOL Bring Your Own License)
	Or for companies that have strong regulatory or compliance needs
Dedicated Instances - not other customer will share your hardware
	Instances run on hardware that is dedicated to you
	May share hardware with other instances in same account
	No control over instance placement	
Capacity Reservations - reserve capacity in specific AZ for any duration
	Reserve On-Demand instances capacity in a specific AZ for any duration
	You always have access to EC2 capacity when you need it
	You charged at On-Demand rate whether you run instances or not
	Suitable for short-term, uninterruptable workloads that needs to be in a specific AZ
	
IPv4 for EC2:
Public and Private IP addresses will be assigned when we create a new EC2
When we stop and start the EC2, Public IP can change
We access this EC2 via Public IP, if we create VPN then we will also be able to access via Private IP
If we do not want the Public IP address to change, then we can assign Elastic IP Address.
Elastic IP address is Public IP address and we have 5 of them default, we can request more from AWS
Elastic is not recommended and we need to associate it after requesting one, otherwise it will be charged.

Placement Groups:
Three strategies for placement groups
Cluster (clusters instances into a low-latency group in a single AZ)
	Pros:Great network - 10 Gbps bandwidth between instances
	Cons:If the rack fails, all instances fails at the same time
	Use Case: Big data job that needs to complete fast and application that needs extremely low latency and high network throughput
Spread (spreads instances across underlying hardware, max 7 instances per group per AZ - for critical applications)
	Pros:Reduced risk is simultaneous failure, can span accross AZ, EC2 instances are on different physical hardware
	Cons:Limited to 7 instances per AZ per placement group
	Use Case: Application that needs to maximize high availability and critical apps where each instance must be isolated from failure from each other
Partition (spread instances across many different partitions, which rely on different sets of rack within an AZ, scales to 100s of EC2 instances per group 
  -for Hadoop, Cassandra, Kafka
	Up to 100s of EC2 instances
	The instances in a partition do not share racks with the instances in the other partitions
	Up to 7 partitions per AZ
	Can span accross multiple AZs in the same region
	A partition failure can affect many EC2 but will not affect other partitions
	EC2 instances get access to the partition information as metadata
	Use Case: Big data applications like HDFS, HBase, Cassandra, Kafka


Elastic Network Interface (ENI):
Logical component in a VPC that represents a virtual network card
The ENI can have the following attributes:
	Primary private IPv4, one or more secondary IPv4
	One Elastic IP per private IPv4
	One Public IPv4
	One or more security groups
	A MAC address
You can create ENI independently and attach them on the fly (move them) on EC2 instances for failover
Bound to a specific AZ

EC2 Hibarnate:
We can stop and terminate instances
In EC2 hibernate:
	the in-memory (RAM) state is preserved
	the instance boot much faster (the OS is not stopped/restarted)
	the RAM state is written to a file in the root EBS volume
	the root EBS volume must be encrypted
Use cases: 
	long-running processing
	saving the RAM state
	services that take time to initialize
	
EC2 Nitro:
	New virtualization technology
	Allows for better performance
	Higher speed EBS (Nitro is necessary 64000 EBS IOPS-max 32000 on non-Nitro)
	Better underlying security

EC2 - Understanding vCPU:
	Multiple threads can run on one CPU
	4 CPU and 2 threads per CPU --> 8 vCPU
EC2 - Optimizing CPU options
	You may want to decrease cores. If you need high RAM and low number of CPU to decrease licensing costs
	You may disable multithreading to have I thread per CPU - helpful for high performance computing (HPC) workloads
	Only specified during instance launch

EC2 - Capacity Reservations:
	Capacity reservations ensure you have EC2 capacity when needed
	Manuel or planned end-date for the reservations. No need for 1 or 3-year commitment.
	Capacity access is immediate, you get billed as soon as it starts
	Combine with Reserved Instances and Savings Plans to do cost saving

AMI Overview:
	Amazon Machine Image
	AMI are a customization of an EC2 instance
	AMI are built for a specific region and can be copied across regions
	Building an AMI - this will also create EBS snaphots
	You can launch EC2 instances from:
		A public AMI: AWS provided
		Your own AMI: you make and maintain them yourself
		An AWS marketplace: an AMI someone else made (and potentially sells)
    
    
